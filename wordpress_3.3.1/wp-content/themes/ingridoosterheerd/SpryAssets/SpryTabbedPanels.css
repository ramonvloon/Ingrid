@charset "UTF-8";

/* SpryTabbedPanels.css - Revision: Spry Preview Release 1.4 */

/* Copyright (c) 2006. Adobe Systems Incorporated. All rights reserved. */

/* Horizontal Tabbed Panels
 *
 * The default style for a TabbedPanels widget places all tab buttons
 * (left aligned) above the content panel.
 */

/* This is the selector for the main TabbedPanels container. For our
 * default style, this container does not contribute anything visually,
 * but it is floated left to make sure that any floating or clearing done
 * with any of its child elements are contained completely within the
 * TabbedPanels container, to minimize any impact or undesireable
 * interaction with other floated elements on the page that may be used
 * for layout.
 *
 * If you want to constrain the width of the TabbedPanels widget, set a
 * width on the TabbedPanels container. By default, the TabbedPanels widget
 * expands horizontally to fill up available space.
 *
 * The name of the class ("TabbedPanels") used in this selector is not
 * necessary to make the widget function. You can use any class name you
 * want to style the TabbedPanels container.
 */
.TabbedPanels {
	margin: 0px;
	padding: 0px;
	float: left;
	clear: none;
	width: 999px; /* IE Hack to force proper layout when preceded by a paragraph. (hasLayout Bug)*/
}

/* This is the selector for the TabGroup. The TabGroup container houses
 * all of the tab buttons for each tabbed panel in the widget. This container
 * does not contribute anything visually to the look of the widget for our
 * default style.
 *
 * The name of the class ("TabbedPanelsTabGroup") used in this selector is not
 * necessary to make the widget function. You can use any class name you
 * want to style the TabGroup container.
 */
.TabbedPanelsTabGroup {
	margin: 0px;
	padding: 0px;
	position: relative;
	top: -60px;
	left: 25px;
	font-size: 16px;
	color: #FFFFFF;
	font-weight: bold;
}

/* This is the selector for the TabbedPanelsTab. This container houses
 * the title for the panel. This is also the tab "button" that the user clicks
 * on to activate the corresponding content panel so that it appears on top
 * of the other tabbed panels contained in the widget.
 *
 * For our default style, each tab is positioned relatively 1 pixel down from
 * where it wold normally render. This allows each tab to overlap the content
 * panel that renders below it. Each tab is rendered with a 1 pixel bottom
 * border that has a color that matches the top border of the current content
 * panel. This gives the appearance that the tab is being drawn behind the
 * content panel.
 *
 * The name of the class ("TabbedPanelsTab") used in this selector is not
 * necessary to make the widget function. You can use any class name you want
 * to style this tab container.
 */
.TabbedPanelsTab {
	position: relative;
	float: left;
	list-style: none;	
	cursor: pointer;
	margin-right: 26px;
}

/* This selector is an example of how to change the appearnce of a tab button
 * container as the mouse enters it. The class "TabbedPanelsTabHover" is
 * programatically added and removed from the tab element as the mouse enters
 * and exits the container.
 */
.TabbedPanelsTabHover {
	color: #0045D5;
}

/* This selector is an example of how to change the appearance of a tab button
 * container after the user has clicked on it to activate a content panel.
 * The class "TabbedPanelsTabSelected" is programatically added and removed
 * from the tab element as the user clicks on the tab button containers in
 * the widget.
 *
 * As mentioned above, for our default style, tab buttons are positioned
 * 1 pixel down from where it would normally render. When the tab button is
 * selected, we change its bottom border to match the background color of the
 * content panel so that it looks like the tab is part of the content panel.
 */
.TabbedPanelsTabSelected {
	color: #0045D5;
}

/* This selector is an example of how to make a link inside of a tab button
 * look like normal text. Users may want to use links inside of a tab button
 * so that when it gets focus, the text *inside* the tab button gets a focus
 * ring around it, instead of the focus ring around the entire tab.
 */
.TabbedPanelsTab a {
	text-decoration: none;
}

/* This is the selector for the ContentGroup. The ContentGroup container houses
 * all of the content panels for each tabbed panel in the widget. For our
 * default style, this container provides the background color and borders that
 * surround the content.
 *
 * The name of the class ("TabbedPanelsContentGroup") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the ContentGroup container.
 */
.TabbedPanelsContentGroup {
	clear: both;
	width: 931px;
	margin-right: auto;
	margin-left: auto;	 	
	position: relative;
	top: 10px;		
}

/* This is the selector for the Content panel. The Content panel holds the
 * content for a single tabbed panel. For our default style, this container
 * provides some padding, so that the content is not pushed up against the
 * widget borders.
 *
 * The name of the class ("TabbedPanelsContent") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the Content container.
 */
.TabbedPanelsContent {
	padding: 0px;
	position: relative;
	height: 310px;
	border: 2px solid #FFFFFF;
	color: #FFFFFF;
	z-index: 10000;
	text-align: left;

}

/* This selector is an example of how to change the appearnce of the currently
 * active container panel. The class "TabbedPanelsContentVisible" is
 * programatically added and removed from the content element as the panel
 * is activated/deactivated.
 */
.TabbedPanelsContentVisible {
}
.TabbedPanelsbg {
	width: 931px;
	margin-right: auto;
	margin-left: auto;
	height: 320px;
	top: -388px;
	position: relative;
	background-color: #FF4040;
	z-index: 1;
	/* for IE */
    filter:alpha(opacity=60);
	/* CSS3 standard */
    opacity:0.6;
}
#TabbedPanelsContent1 {
	position: relative;
	height: 278px;
	border: 2px solid #FFFFFF;
	color: #FFFFFF;
	z-index: 10000;
	text-align: left;
	padding-top: 20px;
	padding-right: 50px;
	padding-left: 50px;
	padding-bottom: 20px;
	line-height: 20px;
	letter-spacing: 1pt;
}
#TabbedPanelsContent2 {
	position: relative;
	height: 310px;
	border: 2px solid #FFFFFF;
	color: #FFFFFF;
	z-index: 10000;
	text-align: left;
	line-height: 20px;
	letter-spacing: 1pt;
	padding: 4px;
}
#TabbedPanelsContent3 {
	position: relative;
	height: 310px;
	border: 2px solid #FFFFFF;
	color: #FFFFFF;
	z-index: 10000;
	text-align: left;
	line-height: 20px;
	letter-spacing: 1pt;
	padding: 4px;
}
#TabbedPanelsContent4 {
	position: relative;
	height: 310px;
	border: 2px solid #FFFFFF;
	color: #FFFFFF;
	z-index: 10000;
	text-align: left;
	line-height: 20px;
	letter-spacing: 1pt;
	padding: 4px;
}
#TabbedPanelsContent5 {
	position: relative;
	height: 310px;
	border: 2px solid #FFFFFF;
	color: #FFFFFF;
	z-index: 10000;
	text-align: left;
	line-height: 20px;
	letter-spacing: 1pt;
	padding: 4px;
}
#TabbedPanelsContent6 {
	position: relative;
	height: 310px;
	border: 2px solid #FFFFFF;
	color: #FFFFFF;
	z-index: 10000;
	text-align: left;
	line-height: 20px;
	letter-spacing: 1pt;
	padding: 4px;
}
#TabbedPanelsContent7 {
	position: relative;
	height: 310px;
	border: 2px solid #FFFFFF;
	color: #FFFFFF;
	z-index: 10000;
	text-align: left;
	line-height: 20px;
	letter-spacing: 1pt;
	padding: 4px;
}
